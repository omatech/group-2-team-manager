@startuml
left to right direction
skinparam actorStyle Hollow

actor Employee
actor Time
actor Company <<Client>>
actor EmployeeAdmin
actor ExternalReviewer
actor FinancialManager
actor ProjectManager
actor User

User <|--- Employee #green;text:green : extends 
User <|--- ExternalReviewer #green;text:green : extends 
EmployeeAdmin ----|> Employee  #green;text:green : extends 
ProjectManager ----|> Employee  #green;text:green : extends 
ExternalReviewer <|--- Company  #green;text:green : extends 
EmployeeAdmin ---|> FinancialManager #green;text:green : extends 
FinancialManager ---|> Company #green;text:green : extends 

/' Employee use cases'/
together {
    usecase syncEmployee
    usecase sendNotificationToEmployee
}

together {
    usecase listEmployees
    usecase showEmployee
}

together {
    usecase createCompany
    usecase listCompanies
    usecase showCompany
    usecase updateCompany
    usecase deleteCompany
    usecase attachClientToCompany
    usecase detachClientOfCompany
}

together {
    usecase createHolding
    usecase listHoldings
    usecase showHolding
    usecase updateHolding
    usecase deleteHolding
}

together {
    usecase createProject
    usecase updateProject
    usecase deleteProject
    usecase listProjects
    usecase showProject
    usecase attachEmployeeToProject
    usecase detachEmployeeOfProject
}

together {
    usecase listPurchases
    usecase showPurchase
}

together {
    usecase listInvoices
    usecase showInvoice
    usecase exportInvoice
    usecase exportInvoices
    usecase createInvoice
    usecase recalculateInvoice
    usecase declareToTaxAuthorities
    usecase changeStatusOfInvoice
    usecase deleteInvoice
}

together {
    usecase login
    usecase logout
    usecase updatePassword
    usecase resetPassword
}

together {
    usecase createEntry
    usecase updateEntry
    usecase deleteEntry
}

together {
    usecase createDepartment
    usecase listDepartments
    usecase showDepartment
    usecase updateDepartment
    usecase deleteDepartment
}

together {
    usecase createUser
    usecase listUsers
    usecase showUser
    usecase updateUser
    usecase deleteUser
}

Time --> syncEmployee 
Time --> sendNotificationToEmployee

Employee --> createEntry
Employee --> updateEntry
Employee --> deleteEntry

Employee --> listProjects
Employee --> showProject

ProjectManager ---> attachEmployeeToProject
ProjectManager ---> detachEmployeeOfProject

EmployeeAdmin --> listEmployees
EmployeeAdmin --> showEmployee

EmployeeAdmin --> createCompany
EmployeeAdmin --> listCompanies
EmployeeAdmin --> showCompany
EmployeeAdmin --> updateCompany
EmployeeAdmin --> deleteCompany
EmployeeAdmin --> attachClientToCompany
EmployeeAdmin --> detachClientOfCompany

EmployeeAdmin --> createHolding
EmployeeAdmin --> listHoldings
EmployeeAdmin --> showHolding
EmployeeAdmin --> updateHolding
EmployeeAdmin --> deleteHolding

EmployeeAdmin --> createProject
EmployeeAdmin --> updateProject
EmployeeAdmin --> deleteProject
EmployeeAdmin --> attachEmployeeToProject
EmployeeAdmin --> detachEmployeeOfProject

EmployeeAdmin --> createDepartment
EmployeeAdmin --> listDepartments
EmployeeAdmin --> showDepartment
EmployeeAdmin --> updateDepartment
EmployeeAdmin --> deleteDepartment

EmployeeAdmin --> createUser
EmployeeAdmin --> listUsers
EmployeeAdmin --> showUser
EmployeeAdmin --> updateUser
EmployeeAdmin --> deleteUser

ExternalReviewer --> listProjects
ExternalReviewer --> showProject

Company --> listPurchases
Company --> showPurchase

Company --> listInvoices
Company --> showInvoice
Company --> exportInvoice
Company --> exportInvoices

FinancialManager --> createInvoice
FinancialManager --> recalculateInvoice
FinancialManager --> changeStatusOfInvoice
FinancialManager --> declareToTaxAuthorities
FinancialManager --> deleteInvoice

User --> login
User --> logout
User --> updatePassword
User --> resetPassword

@enduml